{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueId": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "EastUS",
        "EastUS2",
        "CentralUS",
        "WestUS",
        "WestUS2"
      ],
      "metadata": {
        "description": "Location for the resourceGroup"
      }
    },
    "resourcegroupName": {
      "type": "string",
      "defaultValue": "azure-search-resourcegroup",
      "metadata": {
        "description": "Name of the resourceGroup to create"
      }
    },
    "powershellUID": {
      "type": "string",
      "metadata": {
        "description": "Powershell User Unique Id Suffix"
      }
    },
    "roleDefinitionId": {
      "type": "string",
      "defaultValue": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "metadata": {
        "description": "roleDefinition to apply to the resourceGroup - default is Owner"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "searchServiceSku": {
      "type": "string",
      "defaultValue": "free",
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3",
        "storage_optimized_l1",
        "storage_optimized_l2"
      ],
      "metadata": {
        "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
      }
    },
    "replicaCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 12,
      "metadata": {
        "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "metadata": {
        "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
      }
    },
    "hostingMode": {
      "type": "string",
      "defaultValue": "default",
      "allowedValues": [
        "default",
        "highDensity"
      ],
      "metadata": {
        "description": "Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
      }
    },
    "cognitiveServicesSku": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": [
        "S0",
        "F0"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The pricing tier for the App Service plan"
      }
    },
    "gitRepo": {
      "type": "string",
      "defaultValue": "https://github.com/davideker/azureskills"
    },
    "gitBranch": {
      "type": "string",
      "defaultValue": "main"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[parameters('resourcegroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Note": "subscription level deployment"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "azure-search",
      "resourceGroup": "[parameters('resourcegroupName')]",
      "dependsOn": [
        "[parameters('resourcegroupName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "id": {
            "value": "[uniqueString(parameters('resourcegroupName'), deployment().name, parameters('uniqueId'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "psUserRG": {
            "value": "[concat('powershell-automation-',parameters('powershellUID'))]"
          },
          "psUserName": {
            "value": "[concat('powershellAutomation',parameters('powershellUID'))]"
          },
          "roleDefinitionId": {
            "value": "[parameters('roleDefinitionId')]"
          },
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "searchServiceSku": {
            "value": "[parameters('searchServiceSku')]"
          },
          "replicaCount": {
            "value": "[parameters('replicaCount')]"
          },
          "partitionCount": {
            "value": "[parameters('partitionCount')]"
          },
          "hostingMode": {
            "value": "[parameters('hostingMode')]"
          },
          "cognitiveServicesSku": {
            "value": "[parameters('cognitiveServicesSku')]"
          },
          "hostingPlanSku": {
            "value": "[parameters('hostingPlanSku')]"
          },
          "gitRepo": {
            "value": "[parameters('gitRepo')]"
          },
          "gitBranch": {
            "value": "[parameters('gitBranch')]"
          },
          "utcValue": {
            "value": "[parameters('utcValue')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "id": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "psUserRG": {
              "type": "string"
            },
            "psUserName": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "storageAccountSku": {
              "type": "string"
            },
            "searchServiceSku": {
              "type": "string"
            },
            "replicaCount": {
              "type": "int"
            },
            "partitionCount": {
              "type": "int"
            },
            "hostingMode": {
              "type": "string"
            },
            "cognitiveServicesSku": {
              "type": "string"
            },
            "hostingPlanSku": {
              "type": "string"
            },
            "gitRepo": {
              "type": "string"
            },
            "gitBranch": {
              "type": "string"
            },
            "utcValue": {
              "type": "string"
            }
          },
          "variables": {
            "storageAccount": "[concat('storage', parameters('id'))]",
            "roleAssignment": "[guid(concat('powershell-role-', parameters('id')))]",
            "managedUser": "[concat(deployment().name, '-identity-', parameters('id'))]",
            "searchService": "[concat(deployment().name, '-service-', parameters('id'))]",
            "cognitiveService": "[concat(deployment().name, '-cognitive-service-', parameters('id'))]",
            "powershellUser": "[resourceId(parameters('psUserRG'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('psUserName'))]",
            "websiteName": "[concat(deployment().name, '-site-',  parameters('id'))]",
            "hostingPlanName": "[concat(deployment().name,'-hosting-',  parameters('id'))]",
            "functionAppName": "[concat(deployment().name, '-function-app-',  parameters('id'))]"
          },
          "resources": [
            {
              "name": "DontDelete",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "properties": {
                "level": "CanNotDelete",
                "notes": "Prevent deletion of the resourceGroup"
              }
            },
            {
              "name": "[variables('managedUser')]",
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "location": "[parameters('location')]"
            },
            {
              "name": "[variables('roleAssignment')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-03-01-preview",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[reference(variables('powershellUser'), '2018-11-30').principalId]",
                "scope": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', resourceGroup().name)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('managedUser'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageAccount')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountSku')]"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false
              },
              "resources": [
                {
                  "type": "blobServices/containers",
                  "apiVersion": "2019-06-01",
                  "name": "[concat('default/', 'blob-datasource')]",
                  "properties": {
                    "publicAccess": "None"
                  },
                  "dependsOn": [
                    "[variables('storageAccount')]"
                  ]
                }
              ]
            },
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2020-08-01",
              "name": "[variables('searchService')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[toLower(parameters('searchServiceSku'))]"
              },
              "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]",
                "hostingMode": "[parameters('hostingMode')]"
              }
            },
            {
              "name": "[variables('cognitiveService')]",
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2017-04-18",
              "sku": {
                "name": "[parameters('cognitiveServicesSku')]"
              },
              "kind": "CognitiveServices",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "apiVersion": "2020-06-01",
              "name": "[variables('hostingPlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('hostingPlanSku')]",
                "tier": "Dynamic"
              },
              "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2016-08-01",
              "name": "[variables('websiteName')]",
              "location": "[parameters('location')]",
              "dependsOn": [ "[variables('hostingPlanName')]" ],
              "properties": {
                "serverFarmId": "[variables('hostingPlanName')]"
              }
            },
            {
              "apiVersion": "2015-08-01",
              "type": "Microsoft.Web/sites",
              "name": "[variables('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "dependsOn": [
                "[variables('hostingPlanName')]",
                "[variables('storageAccount')]"
              ],
              "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[variables('hostingPlanName')]",
                "resourceGroup": "[parameters('location')]",
                "httpsOnly": true,
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "AzureWebJobsDotNetReleaseCompilation",
                      "value": true
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount'), ';AccountKey=',listKeys(variables('storageAccount'), '2019-04-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]"
                    },
                    {
                      "name": "AzureWebJobsDashboard",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount'), ';AccountKey=',listKeys(variables('storageAccount'), '2019-04-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount'), ';AccountKey=',listKeys(variables('storageAccount'), '2019-04-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('functionAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~3"
                    }

                  ],
                  "cors": {
                    "allowedOrigins": [
                      "[concat('https://', variables('websiteName'), '.azurewebsites.net')]"
                    ]
                  },
                  "minTlsVersion": "1.2"
                }
              },
              "resources": [
                {
                  "apiVersion": "2019-08-01",
                  "condition": "[contains(parameters('gitRepo'),'http')]",
                  "type": "sourcecontrols",
                  "name": "web",
                  "location": "[parameters('location')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                  ],
                  "properties": {
                    "repoUrl": "[parameters('gitRepo')]",
                    "branch": "[parameters('gitBranch')]",
                    "isManualIntegration": true
                  }
                }
              ]
            },
            {
              "name": "[concat(deployment().name, '-powershell-',parameters('id'))]",
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2019-10-01-preview",
              "location": "[parameters('location')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[variables('powershellUser')]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azPowerShellVersion": "3.0",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "storageAccountSettings": {
                  "storageAccountName": "[variables('storageAccount')]",
                  "storageAccountKey": "[listKeys(variables('storageAccount'), '2019-04-01').keys[0].value]"
                },
                "arguments": "[concat('-resourceGroup ', resourceGroup().name, ' -searchService ', variables('searchService'), ' -storageAccount ', variables('storageAccount'), ' -functionAppName ', variables('functionAppName'))]",
                "primaryScriptURI": "https://raw.githubusercontent.com/davideker/azure-cognitive-search/main/Blueprints/configure.ps1"           
              },
              "dependsOn": [
                "[variables('storageAccount')]",
                "[variables('searchService')]",
                "[variables('cognitiveService')]",
                "[variables('roleAssignment')]",
                "[variables('hostingPlanName')]",
                "[variables('websiteName')]",
                "[variables('functionAppName')]",
                "[resourceId('Microsoft.Web/Sites/sourcecontrols', variables('functionAppName'), 'web')]"
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
  }
}